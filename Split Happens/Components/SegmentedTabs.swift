//
//  SegmentedTabs.swift
//  Split Happens
//
//  Auto-generated by AI on 7/19/25.
//

import SwiftUI

/// A custom segmented picker with accent colour indicator.
struct SegmentedTabs: View {
    let segments: [String]
    @Binding var selection: Int
    @Namespace private var animation
    
    var body: some View {
        HStack(spacing: 4) {
            ForEach(segments.indices, id: \.self) { index in
                segment(for: index)
            }
        }
        .padding(4)
        .background(AppColors.tertiaryBackground)
        .clipShape(RoundedRectangle(cornerRadius: 12, style: .continuous))
    }
    
    private func segment(for index: Int) -> some View {
        let isSelected = selection == index
        return Text(segments[index])
            .font(AppFonts.body)
            .foregroundColor(isSelected ? AppColors.primaryText : AppColors.secondaryText)
            .padding(.vertical, 8)
            .frame(maxWidth: .infinity)
            .background {
                if isSelected {
                    RoundedRectangle(cornerRadius: 10, style: .continuous)
                        .fill(AppColors.accent)
                        .matchedGeometryEffect(id: "segmented", in: animation)
                }
            }
            .contentShape(Rectangle())
            .onTapGesture {
                withAnimation(.spring(response: 0.25, dampingFraction: 0.8)) {
                    selection = index
                }
            }
    }
} 